---
layout: post
title:  "Webassembly system interface"
date:   2019-06-28 23:00:28 -0500
categories: jekyll update
---

WASI is a standard defining Webassembly system interface. WASI has some implementations, such as wasttime, Lucet and polyfill. WASI starts with WASI-core, for example, the below are two APIs defined in the WASI-core API set. The full list can be find [here](https://github.com/CraneStation/wasmtime/blob/d900a5f6efd78055017e089af4df0d89c18298de/docs/WASI-api.md)

```rust
__wasi_fd_read
__wasi_fd_write
```


Wasmtime is a Webassembly runtime, it is a JIT plus a implementation of WASI. Wasmer is a standalone JIT Webassembly runtime, it aslo supports WASI. WASI is proposed by the Wasmtime project.

The system resources defined by WASI include files and filesystems, Berkeley sockets, clocks and random numbers. The WASI is defined independently of specific web browsers or JS. WASI also integrates capability-based security.

The webassembly has a textual representation of the WASM binary format. You can find the explanation [here](https://developer.mozilla.org/en-US/docs/WebAssembly/Understanding_the_text_format)
